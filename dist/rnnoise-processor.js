'use strict';{let b,d;registerProcessor("rnnoise",class extends AudioWorkletProcessor{constructor(a){super({...a,numberOfInputs:1,numberOfOutputs:1,outputChannelCount:[1]});b||(d=new Float32Array((b=(new WebAssembly.Instance(a.processorOptions.module)).exports).memory.buffer));const c=a.processorOptions.sampleRate||48E3;a=b["newState"+(a.processorOptions.model||"")]||b.newState;this.state&&b.deleteState(this.state);this.state=a();this.alive=!0;b.setSampleRate(this.state,c);this.port.onmessage=({data:a})=>
{this.alive&&(a?this.port.postMessage({vadProb:b.getVadProb(this.state)}):(this.alive=!1,b.deleteState(this.state),this.state=null))}}process(a,c,e){if(this.alive&&this.state&&a[0][0]&&c[0])return d.set(a[0][0],b.getInput(this.state)/4),a=c[0][0],(c=b.pipe(this.state,a.length)/4)&&a.set(d.subarray(c,c+a.length)),this.port.postMessage({vadProb:b.getVadProb(this.state)}),!0}})};
